<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperFree最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">


  <br>
<span style="margin-left:25px"></span> PAGE
<br>
  <br>
<span style="margin-left:25px"></span> 毕业设计（论文）中文摘要
<br>
  <br>
<span style="margin-left:25px"></span> 基于Android的物品管理App的设计与实现摘要：   随着城市的发展与繁荣，越来越多的人们选择在大城市工作和居住，使得年轻人对物品管理有较大需求。本文首先介绍物品管理App开发的背景和选题的意义，阐述了选择Android作为开发平台的优势。其次，对基于Android系统的物品管理App的实现进行了需求分析和开发场景的设置。对于整个物品管理App的数据表、功能模块做了详细的分析，并详细的介绍了各个功能模块的功能，绘制了重要的业务流程图。用户登录进入到该款物品管理App的主界面后，可以实现管理住宿、房间、家具和物品等信息、查询过期和临期物品、在物品处于过期和临期时进行提示、将物品打包到容器等功能。
<br>
  <br>
<span style="margin-left:25px"></span> 关键词：  Android  App  物品管理  个人物品管理工具
<br>
  <br>
<span style="margin-left:25px"></span> 毕业设计（论文）外文摘要
<br>
  <br>
<span style="margin-left:25px"></span> Title    Design and Implementation of Android Based Goods                          Management App                    （空一行）Abstract（三号黑体，居左）With the development and prosperity of cities, more and more people choose to work and live in big cities, making young people have a greater demand for goods management. This article first introduces the background of item management App development and the significance of topic selection, and expounds the advantages of choosing Android as the development platform. Secondly, the requirement analysis and development scenario setting were carried out for the realization of the item management App based on the Android system. The data sheet and function modules of the entire item management App were analyzed in detail, and the functions of each function module were introduced in detail, and important business flowcharts were drawn. After the user logs in and enters the main interface of the item management App, he can manage the information of accommodation, room, furniture and items, query expired and impending items, prompt when the item is expired and impending, and pack the item into a container and other functions.Keywords：  Android   App   goods management   personal goods management tools
<br>
  <br>
<span style="margin-left:25px"></span> 目   次
<br>
  <br>
<span style="margin-left:25px"></span> 1  引言………………………………………………………………………………… 1
<br>
  <br>
<span style="margin-left:25px"></span> 2  可行性研究………………………………………………………………………… 2
<br>
  <br>
<span style="margin-left:25px"></span> 2.1  经济可行性……………………………………………………………………… 2
<br>
  <br>
<span style="margin-left:25px"></span> 2.2  技术可行性……………………………………………………………………… 2
<br>
  <br>
<span style="margin-left:25px"></span> 2.3  运行可行性……………………………………………………………………… 2
<br>
  <br>
<span style="margin-left:25px"></span> 3  需求分析…………………………………………………………………………… 3
<br>
  <br>
<span style="margin-left:25px"></span> 3．1  总体目标………………………………………………………………………… 3
<br>
  <br>
<span style="margin-left:25px"></span> 3．2  具体目标………………………………………………………………………… 3
<br>
  <br>
<span style="margin-left:25px"></span> 3.3 系统数据模型…………………………………………………………………… 4
<br>
  <br>
<span style="margin-left:25px"></span> 4  概要设计…………………………………………………………………………… 8
<br>
  <br>
<span style="margin-left:25px"></span> 4．1  体系结构设计…………………………………………………………………… 9
<br>
  <br>
<span style="margin-left:25px"></span> 4．2  接口设计……………………………………………………………………… 10
<br>
  <br>
<span style="margin-left:25px"></span> 4.2.1  外部接口…………………………………………………………………… 10
<br>
  <br>
<span style="margin-left:25px"></span> 4.2.2  内部接口…………………………………………………………………… 11
<br>
  <br>
<span style="margin-left:25px"></span> 4．3  代码设计……………………………………………………………………… 11
<br>
  <br>
<span style="margin-left:25px"></span> 4．4  数据库设计…………………………………………………………………… 11
<br>
  <br>
<span style="margin-left:25px"></span> 4.4.1  关系模式设计……………………………………………………………… 11
<br>
  <br>
<span style="margin-left:25px"></span> 4.4.2  数据库物理结构设计……………………………………………………… 12
<br>
  <br>
<span style="margin-left:25px"></span> 4．5  运行设计……………………………………………………………………… 14
<br>
  <br>
<span style="margin-left:25px"></span> 4.5.1  环境………………………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 4.5.2  运行控制…………………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 4．6  安全保密设计………………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 4.6.1  数据安全性………………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 4.6.1  登录用户的安全性………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 4．7  维护设计……………………………………………………………………… 15
<br>
  <br>
<span style="margin-left:25px"></span> 5  详细设计………………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.1  详细设计概述………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.2  界面设计……………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.3  用户模块定义………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.1  模块定义…………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.2  输入项目…………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.3  输出项目…………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.4  程序逻辑…………………………………………………………………… 16
<br>
  <br>
<span style="margin-left:25px"></span> 5.4  概览模块定义………………………………………………………………… 17
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.1  模块定义…………………………………………………………………… 17
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.2  输入项目…………………………………………………………………… 17
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.3  输出项目…………………………………………………………………… 17
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.4  程序逻辑…………………………………………………………………… 17
<br>
  <br>
<span style="margin-left:25px"></span> 5.5  空间模块定义………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.1  模块定义…………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.2  输入项目…………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.3  输出项目…………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.4  程序逻辑…………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.6  打包模块定义………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.1  模块定义…………………………………………………………………… 18
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.2  输入项目…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.3  输出项目…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.4  程序逻辑…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.7  设置模块定义………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.7.1  模块定义…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.7.2  输入项目…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.7.3  输出项目…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.7.4  程序逻辑…………………………………………………………………… 19
<br>
  <br>
<span style="margin-left:25px"></span> 5.8  界面实现……………………………………………………………………… 20
<br>
  <br>
<span style="margin-left:25px"></span> 6  编码……………………………………………………………………………… 25
<br>
  <br>
<span style="margin-left:25px"></span> 6.1  开发工具及编程语言概述…………………………………………………… 25
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.1  Microsoft Visio Professional简介…………………………………… 25
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.2  Sketch简介………………………………………………………………… 25
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.3  Android简介……………………………………………………………… 26
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.4  Java简介…………………………………………………………………… 28
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.5  Android Studio简介……………………………………………………… 28
<br>
  <br>
<span style="margin-left:25px"></span> 6.1.6  SQLite简介………………………………………………………………… 29
<br>
  <br>
<span style="margin-left:25px"></span> 7  测试……………………………………………………………………………… 30
<br>
  <br>
<span style="margin-left:25px"></span> 7.1  测试原则及测试方法概述…………………………………………………… 30
<br>
  <br>
<span style="margin-left:25px"></span> 7.1.1  测试原则…………………………………………………………………… 30
<br>
  <br>
<span style="margin-left:25px"></span> 7.1.2  测试方法…………………………………………………………………… 31
<br>
  <br>
<span style="margin-left:25px"></span> 7.2  测试项目测试用例…………………………………………………………… 31
<br>
  <br>
<span style="margin-left:25px"></span> 7.3  软件测试结论………………………………………………………………… 39
<br>
  <br>
<span style="margin-left:25px"></span> 7.3.1  软件能力…………………………………………………………………… 39
<br>
  <br>
<span style="margin-left:25px"></span> 7.3.2  缺陷和限制………………………………………………………………… 39
<br>
  <br>
<span style="margin-left:25px"></span> 7.3.3  测试结论…………………………………………………………………… 39
<br>
  <br>
<span style="margin-left:25px"></span> 结论………………………………………………………………………………… 40
<br>
  <br>
<span style="margin-left:25px"></span> 参考文献…………………………………………………………………………… 41
<br>
  <br>
<span style="margin-left:25px"></span> 致谢………………………………………………………………………………… 42
<br>
  <br>
<span style="margin-left:25px"></span> 1  引言
<br>
  <br>
<span style="margin-left:25px"></span> 随着新技术的飞速发展以及电子硬件设备的性能提高，移动设备前景十分光明，Android操作系统带来了手机大革命，使得智能手机成为了“掌上电脑”。随着中国经济的快速增长，百姓的消费水平也不断提高，物品浪费的现象时有发生。随着城市的快速发展，越来越多的大学生毕业后选择在大城市进行工作和生活，他们中的绝大多数都会选择租赁房屋，这就避免不了经常搬家的问题。如何利用手机的便携性来帮助用户管理物品，并且减少物品的浪费，成了一个问题。本文基于Android的物品管理App，探讨该应用如何实现，使得用户可以随时随地的管理物品、在物品过期和临期时给予提示。
<br>
  <br>
<span style="margin-left:25px"></span> 随着近年来网络技术的发展，虽然中国无线上网起步较晚，但是发展相当迅速，全球无线上网正呈现高速发展趋势，而在中国这种趋势则更加明显。同时随着无线网络与4G技术的迅猛发展，人们可以更加快速便捷的享受随时随地上网的乐趣，在车上、旅途中、办公司里，只要是有信号的地方，都是其方便快捷的体现。
<br>
  <br>
<span style="margin-left:25px"></span> 无线网络与4G技术的迅猛发展，使得人们对于手机的依赖性与日俱增，据最新的数据统计，截至2020年12月，我国网民规模达9.89亿，而其中手机网民人数已经达到9.86亿，互联网普及率达70.4%。手机网民人数占总体网民人数比例已达99.6%，手机作为第一上网终端的地位更加牢固。
<br>
  <br>
<span style="margin-left:25px"></span> 2007年，Android技术的推出以来，使得智能手机更进一步走入人们的生活。本系统致力于开发一款应用在Android手机操作平台的软件。同时本人根据务实的态度，展开了详细的调研工作，对目前市面上现存的个人物品管理App进行分析，提出了个人独特的看法，对自己设计的这款物品管理App提出了改进的方案。
<br>
  <br>
<span style="margin-left:25px"></span> 本课题的研究目的在于掌握Java手机应用开发技术和移动软件平台开发技术。在开发的过程中，主要是通过Android提供的SDK，并结合Android移动开发平台，并且以Java语言为基础，在Android Studio软件编程环境中完成该款Android物品管理App的设计。本课题的意义在于通过开发一款基于Android手机操作平台的物品管理App，解决目前个人物品管理App所存在的弊端，以及现在工具类软件的泛滥让人无从抉择的难题。同时，在开发本款手机应用软件的过程中，进一步巩固的了自己之前学Android的知识，丰富了自己的开发经历，而且进一步了解到了项目的开发流程，掌握了Android系统的应用程序接口的使用、以及手机真机测试的使用和模拟器的使用，在这一过程中也提高了自身解决难题的能力，对于目前Android手机的新特性更加了解了。
<br>
  <br>
<span style="margin-left:25px"></span> 2  可行性研究
<br>
  <br>
<span style="margin-left:25px"></span> 在开发工作进行之前，对经济可行性、技术可行性及运行可行性等三方面进行分析。通过对系统设计目标进行分析，针对分析结果提出可行性方案并进行论证。
<br>
  <br>
<span style="margin-left:25px"></span> 2.1  经济可行性
<br>
  <br>
<span style="margin-left:25px"></span> Android是一种基于Linux的自由及开放源代码的操作系统，主要使用于移动设备，如智能手机和平板电脑，由Google公司和开放手机联盟领导及开发。在开发方式上，具有开源特性的Android平台打破了iOS封闭的开发模式，无需授权费用的免费模式也与Windows Phone等操作系统收取高额授权费的模式大相径庭，Android的开放使得智能手机开发成本大幅降低，因此开发所需的软硬件平台都相较其他系统更易获得。从经济角度考虑，开发成本及实现难度均低于其他系统，因此具有经济可行性。
<br>
  <br>
<span style="margin-left:25px"></span> 2.2  技术可行性
<br>
  <br>
<span style="margin-left:25px"></span> 本系统采用Java作为开发语言，使用了Android Studio做为集成开发工具。开发过程中采用分辨率为1440×3040的Android虚拟机（Pixel 4 XL）及分辨率为2248×1080的Android智能手机进行调试，开发所需的软件环境及硬件配置均能满足开发的需求。虽然Android平台与Windows平台和iOS平台的架构不同，但Java作为多平台通用的语言，实现功能的原理相同。本系统开发涉及到Android平台下的数据库操作及四大组件应用的技术。由于这两项技术成熟和高效，开发人员广泛使用，因此本系统的实现方案具有技术可行性。
<br>
  <br>
<span style="margin-left:25px"></span> 2.3  运行可行性
<br>
  <br>
<span style="margin-left:25px"></span> 运行可行性是对组织结构的影响。该软件界面简洁，操作简单，用户不必进行专门学习，只需拥有手机日常使用经验就能上手进行所有操作，目前大部分Android手机采用触摸屏幕的操作方式更大大降低了用户的使用难度，因此该系统具有运行可行性。
<br>
  <br>
<span style="margin-left:25px"></span> 综上所述，该系统具有可行性。
<br>
  <br>
<span style="margin-left:25px"></span> 3  需求分析
<br>
  <br>
<span style="margin-left:25px"></span> 需求分析在软件项目开发中是非常重要的过程，充分、详实的需求分析的资料可以为后期的项目开发打下坚实的基础。需求分析是项目开发人员与用户之间的桥梁，因为开发人员专业的局限性可能缺乏对于用户相关业务领域的了解，而一般情况用户也并不十分了解计算机的相关知识，导致了用户与开发人员之间往往对于同一问题的理解存在一定的差异性，而且由于习惯用语的不同往往会为需求分析带来很大的困难，需求分析便是解决这一问题。
<br>
  <br>
<span style="margin-left:25px"></span> 3．1  总体目标
<br>
  <br>
<span style="margin-left:25px"></span> 本文设计的App为用户提供了一个管理生活中个人物品的平台，极大的为用户提供了生活的便利和避免了因物品过期而导致的浪费。该App具有信息实时性、操作便捷、功能丰富、易维护等特性。该软件为工具类App提供了较为新颖的思路，不仅可以记录物品的基本信息，在物品即将过期和过期的时候进行提醒，还可以将物品进行打包。本App经过多次修复，App的设计在功能和性能上基本都能满足用户的需求。
<br>
  <br>
<span style="margin-left:25px"></span> 3．2  具体目标
<br>
  <br>
<span style="margin-left:25px"></span> 根据需求分析，该个人物品管理App主要实现了5个功能模块，分别是用户模块、概览模块、空间模块、容器模块和设置模块。
<br>
  <br>
<span style="margin-left:25px"></span> （1）用户模块：提供的功能有用户登录、用户注册、用户注销。该模块是其他功能实现的基础。
<br>
  <br>
<span style="margin-left:25px"></span> （2）概览模块：提供的功能有切换住所、查看过期和临期物品列表、查询和修改账号、创建物品、搜索物品。该模块主要是提供所有住所的过期和临期物品信息，对用户进行提醒，避免物品的浪费。
<br>
  <br>
<span style="margin-left:25px"></span> （3）空间模块：提供的功能有切换住所、显示当前住所下的房间、显示房间中的家具、显示家具下的所有物品、修改和删除物品、搜索物品。该模块主要是提供当前住所中的所有物品信息，方便用户对物品进行管理。
<br>
  <br>
<span style="margin-left:25px"></span> （4）容器模块：提供的功能有切换住所、显示当前容器中的所有物品、修改和删除物品、搜索物品。该模块主要是提供处于打包状态的所有物品信息，方便用户对已打包的物品进行管理。
<br>
  <br>
<span style="margin-left:25px"></span> （5）设置模块：提供的功能有修改用户头像、修改物品被列为临期状态的条件、住所管理、房间管理、家具管理、容器管理、类别管理、设置应用密码、将物品信息导出到Excel表格、对应用进行反馈和评分。该模块主要是提供对应用所进行的所有设置项，方便用户根据自身情况对应用进行个性化设置。
<br>
  <br>
<span style="margin-left:25px"></span> 3.3 系统数据模型
<br>
  <br>
<span style="margin-left:25px"></span> E-R方法是“实体-联系方法”（Entity-Relationship Approach）的简称。它是描述现实世界概念结构模型的有效方法。是表示概念模型的一种方式，用矩形表示实体，矩形框内写明实体名；实体的属性用椭圆表示，与相应的实体连接使用无向边实现；实体之间的联系用菱形表示，在菱形框内写明联系名，与有关实体通过无向边分别连接起来，同时在无向边旁标上联系的类型（1:1，1:n或m:n）。通过对系统详细的需求分析、流程的设计以及对系统功能结构的确定，规划出系统中使用的数据库所需的实体对象，分别为用户实体、住所实体、账号实体、房间实体、家具实体、容器实体、种类实体、物品实体。
<br>
  <br>
<span style="margin-left:25px"></span> 表3-1 E-R图符号约定表
<br>
  <br>
<span style="margin-left:25px"></span> 符号含义	符号	说明
<br>
  <br>
<span style="margin-left:25px"></span> 实体		表示实体集
<br>
  <br>
<span style="margin-left:25px"></span> 属性		表示属性
<br>
  <br>
<span style="margin-left:25px"></span> 联系		表示联系集
<br>
  <br>
<span style="margin-left:25px"></span> 4  概要设计
<br>
  <br>
<span style="margin-left:25px"></span> 系统总体设计即是对全局问题的设计，又称概要设计，也就是设计系统总的处理方案。软件工程总体设计包括：计算机配置设计、系统模块结构设计、数据库和文件设计、代码设计以及系统可靠性与内部控制设计等内容。软件功能分解属于下列软件开发中的总体设计阶段。
<br>
  <br>
<span style="margin-left:25px"></span> 4．1  体系结构设计
<br>
  <br>
<span style="margin-left:25px"></span> 根据对系统需求分析中的总体目标和具体目标部分的分析，得到系统的功能图如图 3-1所示。
<br>
  <br>
<span style="margin-left:25px"></span> 4．2  接口设计
<br>
  <br>
<span style="margin-left:25px"></span> 4.2.1  外部接口
<br>
  <br>
<span style="margin-left:25px"></span> （1）系统界面
<br>
  <br>
<span style="margin-left:25px"></span> 手机App系统的界面要求简洁大方，一目了然。在用户使用的过程中，尽量站在用户的角度考虑问题。界面的图片设计要美观，功能模块布局合理。在Android系统中开发，界面的展示布局文件是在XML中实现的。本系统的系统界面包括欢迎界面和主页面，而主页面又分为概览、空间、打包和设置四个界面。
<br>
  <br>
<span style="margin-left:25px"></span> （2）软件接口
<br>
  <br>
<span style="margin-left:25px"></span> 物品管理App的数据接口是访问Android手机本地的SQLite数据库，进行相关的数据处理。
<br>
  <br>
<span style="margin-left:25px"></span> 4.2.2  内部接口
<br>
  <br>
<span style="margin-left:25px"></span> 对于数据库的相关操作，如增删改查，是通过在程序中进行接口与控件的绑定而实现的。
<br>
  <br>
<span style="margin-left:25px"></span> 4．3  代码设计
<br>
  <br>
<span style="margin-left:25px"></span> 每个系统的代码设计都是该系统的整体设计中最为重要的部分，代码设计的好坏直接影响系统的功能性和实践性，所以进行系统代码设计时要注意许多如下问题：
<br>
  <br>
<span style="margin-left:25px"></span> （1）要充分理解各个功能和模块之间的关系，理解模块和模块之间的逻辑关系，从而方便程序的编写，减少代码逻辑的错误。
<br>
  <br>
<span style="margin-left:25px"></span> （2）为了方便代码的日后代码的设计更改和完善，所以代码要有必要的备注
<br>
  <br>
<span style="margin-left:25px"></span> （3）要写出简洁精炼的代码，不要写太长，方便代码查阅。
<br>
  <br>
<span style="margin-left:25px"></span> （4）类和属性名的设计要符合规范要求，起名要按照规范来。
<br>
  <br>
<span style="margin-left:25px"></span> （5）在变量和类使用前要进行声明和定义。
<br>
  <br>
<span style="margin-left:25px"></span> （6）编程过程中要符合Java语法规范，不要出现语法错误，保证编译效率，也要尽量避免逻辑错误。
<br>
  <br>
<span style="margin-left:25px"></span> 4．4  数据库设计
<br>
  <br>
<span style="margin-left:25px"></span> 所有的应用程序都必然涉及到数据的输入、输出，Android系统应用也不例外，应用程序的参数设置、运行状态都需要保存到外部存储器上，这样应用程序的数据在系统关机之后才不会丢失。Android的应用开发是使用Java语言开发的，所以往往Java IO的大部分编程经验都可以“移植”到应用开发中。Android有四种数据存储方式分别是网络存储、共享文件存储、数据库存储、内容提供者存储。若是应用只用少量数据需要保存，那么使用共享文件或者普通文本既可以了。但是若果应用程序有大量数据需要存储、访问，就需要借助数据库了。Android系统内置了SQLite数据库，整个数据库就对应一个文件，非常便于移植。而且还为访问SQLite数据库提供了大量便捷的API。本系统将数据主要保存到SQLite数据库中，程序通过访问数据库而获得信息，在手机界面进行展示。
<br>
  <br>
<span style="margin-left:25px"></span> 4.4.1  关系模式设计
<br>
  <br>
<span style="margin-left:25px"></span> 4.4.2  数据库物理结构设计
<br>
  <br>
<span style="margin-left:25px"></span> SQLite数据类型是一个用来指定任何对象的数据类型的属性。SQLite中的每一列，每个变量和表达式都有相关的数据类型。SQLite使用一个更普遍的动态类型系统。在SQLite中，值的数据类型与值本身是相关的，而不是与它的容器相关。SQLite的存储类有以下几种：
<br>
  <br>
<span style="margin-left:25px"></span> （1）NULL：值是一个NULL值。
<br>
  <br>
<span style="margin-left:25px"></span> （2）INTEGER：值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。
<br>
  <br>
<span style="margin-left:25px"></span> （3）REAL：值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。
<br>
  <br>
<span style="margin-left:25px"></span> （4）TEXT：值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。
<br>
  <br>
<span style="margin-left:25px"></span> （5）BLOB：值是一个 blob 数据，完全根据它的输入存储。
<br>
  <br>
<span style="margin-left:25px"></span> 故使用SQLite时，不需要指定长度，因为它本身会根据内容进行动态匹配。
<br>
  <br>
<span style="margin-left:25px"></span> 4．5  运行设计
<br>
  <br>
<span style="margin-left:25px"></span> 4.5.1  环境
<br>
  <br>
<span style="margin-left:25px"></span> （1）系统开发环境
<br>
  <br>
<span style="margin-left:25px"></span> 系统的开发环境：Android Studio集成开发环境。
<br>
  <br>
<span style="margin-left:25px"></span> 系统的开发语言：Java。
<br>
  <br>
<span style="margin-left:25px"></span> 系统的数据库：SQLite。
<br>
  <br>
<span style="margin-left:25px"></span> 开发环境的运行平台：MacOS Big Sur。
<br>
  <br>
<span style="margin-left:25px"></span> （2）客户端
<br>
  <br>
<span style="margin-left:25px"></span> 运行平台：Android 8及更高版本。
<br>
  <br>
<span style="margin-left:25px"></span> 分辨率：最佳效果2248*1080像素。
<br>
  <br>
<span style="margin-left:25px"></span> 4.5.2  运行控制
<br>
  <br>
<span style="margin-left:25px"></span> 通过对系统的进行详细的需求分析，该款自主设计和研发的物品管理App可以为用户提供所保存物品的基本信息，同时可以对用户进行过期和临期物品的提醒服务。根据这些功能，系统可以划分为5个小模块：用户模块、概览模块、空间模块、打包模块、设置模块。在系统的开发过程中，采用模块化的开发和维护，增加了程序的可维护性和可扩展性。
<br>
  <br>
<span style="margin-left:25px"></span> 4．6  安全保密设计
<br>
  <br>
<span style="margin-left:25px"></span> 4.6.1  数据安全性
<br>
  <br>
<span style="margin-left:25px"></span> 本物品管理App的主要实现的是数据查询和展示效果，物品信息涉及个人隐私，用户可以设置应用密码，再次进入App时会需要密码验证，验证失败次数超过5次会将应用锁定。使用Android手机自带的数据库具有较好的安全性，对外不提供数据访问接口。
<br>
  <br>
<span style="margin-left:25px"></span> 4.6.1  登录用户的安全性
<br>
  <br>
<span style="margin-left:25px"></span> 打开物品管理App之后，用户首先看到的是欢迎界面，短暂的在欢迎界面停留之后会跳转到主界面，体现人性化的服务，所以用户下载安装完成App进行登录的时候，物品管理App并不涉及到物品信息的显示。
<br>
  <br>
<span style="margin-left:25px"></span> 4．7  维护设计
<br>
  <br>
<span style="margin-left:25px"></span> 一款APP系统投入到市场后应该注重后期维护，主要为功能更新。功能更新主要通过定期进行APP产品的调研分析，做好充分的数据分析，并加强收集用户的信息反馈工作，从而为产品的改进提出建设性的建议给技术开发人员，满足APP用户的使用需求。
<br>
  <br>
<span style="margin-left:25px"></span> 5  详细设计
<br>
  <br>
<span style="margin-left:25px"></span> 5.1  详细设计概述
<br>
  <br>
<span style="margin-left:25px"></span> 概要设计的任务完成后，就要进入详细设计阶段。在详细设计阶段涉及到数据结构设计、物理设计、算法设计、界面设计等，可以看作是对概要设计的完善。
<br>
  <br>
<span style="margin-left:25px"></span> 5.2  界面设计
<br>
  <br>
<span style="margin-left:25px"></span> 程序的主页面的设计应该简洁明了，清晰明确的表达出系统所提供的服务。所以主界面的设计要简洁，通过底部导航栏和4个Fragment来组成主界面，4个Fragment分别为概览、空间、打包、设置4个模块。
<br>
  <br>
<span style="margin-left:25px"></span> 除了功能上的设计之外，主界面上还添加了一些可缩放矢量图形SVG，保证图片无论如何放大都不会出现失真效果，而且可以方便的更改图片颜色，整体效果也更符合Google Material Design的设计理念和审美。以上表达的页面效果在Android中可以通过TextView、ImageView、Spinner、Switch和ConstraintLayout等组件来实现。
<br>
  <br>
<span style="margin-left:25px"></span> 5.3  用户模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.1  模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 模块名称：用户。
<br>
  <br>
<span style="margin-left:25px"></span> 模块功能：本模块中主要进行用户登录、注册，登录成功后跳转到主界面。
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.2  输入项目
<br>
  <br>
<span style="margin-left:25px"></span> 用户名；密码；头像；性别。
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.3  输出项目
<br>
  <br>
<span style="margin-left:25px"></span> 当系统验证该用户的用户信息正确的时候进入系统主界面。
<br>
  <br>
<span style="margin-left:25px"></span> 主要输出项目有：用户登录成功；用户登录失败。
<br>
  <br>
<span style="margin-left:25px"></span> 5.3.4  程序逻辑
<br>
  <br>
<span style="margin-left:25px"></span> 启动应用，打开登录界面，如果用户已经建立账号，输入用户名和密码，系统会判断用户名、密码是否符合规定，若符合规定，系统会与数据库进行比对，比对成功即可进入主界面，若比对失败，则提示用户信息有误；如果用户没有账号，点击注册按钮，打开注册界面，选择用户头像，输入用户名、密码、性别信息，点击注册按钮，系统会判断用户名、密码等信息是否符合规定，若符合规定，再判断用户名与数据库中的所有已经存在的用户名不重复，如果不重复，系统会向数据库写入新用户信息，用户注册成功，进入主界面；如果重复，系统会提示用户名重复。
<br>
  <br>
<span style="margin-left:25px"></span> 5.4  概览模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.1  模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 模块名称：概览。
<br>
  <br>
<span style="margin-left:25px"></span> 模块功能：本模块中主要功能有：显示过期临期物品列表及物品的查看修改和删除；切换住所；搜索物品；查看和修改账号；新建物品。
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.2  输入项目
<br>
  <br>
<span style="margin-left:25px"></span> 要创建物品的信息；要修改的账号信息；搜索信息；要切换的住所信息；要修改和删除的物品信息。
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.3  输出项目
<br>
  <br>
<span style="margin-left:25px"></span> 主要输出项目有：物品列表；账号信息。
<br>
  <br>
<span style="margin-left:25px"></span> 5.4.4  程序逻辑
<br>
  <br>
<span style="margin-left:25px"></span> 1.显示过期临期物品及删除和修改物品：用户在界面选择查看过期还是临期物品，进入对应界面，该界面显示对应物品列表，点击物品列表项可以打开物品信息界面，可选择删除和修改物品，点击删除，物品从数据库和列表中删除；点击修改，打开修改物品界面，输入新的物品信息，点击保存按钮，系统会校验输入信息的准确性，如果准确，则保存到数据库中，物品列表也会刷新，如果不准确，提示错误，让用户修改。如果点击取消按钮，则关闭界面，所有信息不保存。
<br>
  <br>
<span style="margin-left:25px"></span> 2.切换住所：点击当前住所名称，弹出该用户所有住所列表，点击任意项即可切换到该住所，同时界面中的信息刷新为该住所的有关信息。
<br>
  <br>
<span style="margin-left:25px"></span> 3.搜索物品：点击搜索按钮，打开搜索界面，输入搜索信息和是否在当前住所还是所有住所中搜索，点击确定按钮即可显示搜索到的物品列表。点击物品列表项可打开查看物品信息的界面，可选择删除和修改物品，点击删除，物品从数据库和列表中删除；点击修改，打开修改物品界面，输入新的物品信息，点击保存按钮，系统会校验输入信息的准确性，如果准确，则保存到数据库中，物品列表也会刷新，如果不准确，提示错误，让用户修改。如果点击取消按钮，则关闭界面，所有信息不保存。
<br>
  <br>
<span style="margin-left:25px"></span> 4.查看和修改账号：界面中显示当前住所的账号信息，长按可以复制账号到剪切板，点击账号右边的修改按钮，打开修改账号对话框，输入账号信息，点击保存按钮，即可将其存入数据库并刷新界面，点击取消按钮，关闭对话框。
<br>
  <br>
<span style="margin-left:25px"></span> 5.新建物品：点击新建物品按钮，打开新建物品界面。输入物品信息，点击保存按钮，系统会校验输入信息的准确性，如果准确，则保存到数据库中，所有物品列表和临期过期物品的数量也会刷新，如果不准确，提示错误，让用户修改。如果点击取消按钮，则关闭界面，所有信息不保存。
<br>
  <br>
<span style="margin-left:25px"></span> 5.5  空间模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.1  模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 模块名称：空间。
<br>
  <br>
<span style="margin-left:25px"></span> 模块功能：本模块中主要功能有：切换住所；显示放置在家具中的物品及物品的查看修改和删除。
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.2  输入项目
<br>
  <br>
<span style="margin-left:25px"></span> 搜索信息；要切换的住所信息；选择住所、房间、家具；要修改和删除的物品信息。
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.3  输出项目
<br>
  <br>
<span style="margin-left:25px"></span> 主要输出项目有：物品列表。
<br>
  <br>
<span style="margin-left:25px"></span> 5.5.4  程序逻辑
<br>
  <br>
<span style="margin-left:25px"></span> 1.切换住所：点击当前住所名称，弹出该用户所有住所列表，点击任意项即可切换到该住所，同时界面中的信息刷新为该住所的有关信息。
<br>
  <br>
<span style="margin-left:25px"></span> 2.显示放置在家具中的物品及物品的查看修改和删除：选择房间Tab，每个房间Tab下面会显示该房间下的家具列表，点击某个家具会显示该家具中的物品列表。点击物品列表项可打开查看物品信息的界面，可选择删除和修改物品，点击删除，物品从数据库和列表中删除；点击修改，打开修改物品界面，输入新的物品信息，点击保存按钮，系统会校验输入信息的准确性，如果准确，则保存到数据库中，物品列表也会刷新，如果不准确，提示错误，让用户修改。如果点击取消按钮，则关闭界面，所有信息不保存。
<br>
  <br>
<span style="margin-left:25px"></span> 5.6  打包模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.1  模块定义
<br>
  <br>
<span style="margin-left:25px"></span> 模块名称：打包。
<br>
  <br>
<span style="margin-left:25px"></span> 模块功能：本模块中主要功能有：切换住所；显示放置在容器中的物品及物品的查看修改和删除。
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.2  输入项目
<br>
  <br>
<span style="margin-left:25px"></span> 用户名、密码、头像、性别。
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.3  输出项目
<br>
  <br>
<span style="margin-left:25px"></span> 主要输出项目有：用户登录成功、用户登录失败。
<br>
  <br>
<span style="margin-left:25px"></span> 5.6.4  程序逻辑
<br>
  <br>
<span style="margin-left:25px"></span> 1.切换住所：点击当前住所名称，弹出该用户所有住所列表，点击任意项即可切换到该住所，同时界面中的信息刷新为该住所的有关信息。
<br>
  <br>
<span style="margin-left:25px"></span> 2. 显示放置在容器中的物品及物品的查看修改和删除：选择容器Tab，每个容器Tab下面会显示该容器下的物品列表。点击物品列表项可打开查看物品信息的界面，可选择删除和修改物品，点击删除，物品从数据库和列表中删除；点击修改，打开修改物品界面，输入新的物品信息，点击保存按钮，系统会校验输入信息的准确性，如果准确，则保存到数据库中，物品列表也会刷新，如果不准确，提示错误，让用户修改。如果点击取消按钮，则关闭界面，所有信息不保存。
<br>
</div>

<div style="margin-bottom:100px"></div>
</body>
</html>
